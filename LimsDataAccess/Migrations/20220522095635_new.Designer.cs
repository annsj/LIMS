// <auto-generated />
using System;
using LimsDataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LimsDataAccess.Migrations
{
    [DbContext(typeof(LimsContext))]
    [Migration("20220522095635_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LimsDataAccess.Models.Elisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elisa");
                });

            modelBuilder.Entity("LimsDataAccess.Models.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Concentration")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sample");
                });

            modelBuilder.Entity("LimsDataAccess.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Concentration")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElisaId")
                        .HasColumnType("int");

                    b.Property<int>("ElisaPlatePosition")
                        .HasColumnType("int");

                    b.Property<float?>("MeasureValue")
                        .HasColumnType("real");

                    b.Property<int>("SampleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElisaId");

                    b.HasIndex("SampleId");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("LimsDataAccess.Models.Test", b =>
                {
                    b.HasOne("LimsDataAccess.Models.Elisa", "Elisa")
                        .WithMany("Tests")
                        .HasForeignKey("ElisaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LimsDataAccess.Models.Sample", "Sample")
                        .WithMany("Tests")
                        .HasForeignKey("SampleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elisa");

                    b.Navigation("Sample");
                });

            modelBuilder.Entity("LimsDataAccess.Models.Elisa", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("LimsDataAccess.Models.Sample", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
